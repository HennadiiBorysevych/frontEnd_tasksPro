{"version":3,"file":"static/js/519.504e4443.chunk.js","mappings":"yUAIaA,EAAYC,EAAAA,QAAAA,IAAH,6OAEA,SAAAC,GAAK,gBAAOA,EAAMC,MAAMC,QAAQC,WAAWC,KAAtC,IAED,SAAAJ,GAAK,OAAIA,EAAMK,EAAV,IAEpB,SAAAL,GAAK,gBAAOA,EAAMC,MAAMC,QAAQI,KAAKC,QAAhC,QAGZC,EAAAA,GAAAA,OATkB,oFAclBA,EAAAA,GAAAA,MAdkB,sDAmBTC,EAAiBV,EAAAA,QAAAA,IAAH,oNASvBS,EAAAA,GAAAA,MATuB,+DAcvBA,EAAAA,GAAAA,OAduB,0FAoBvBA,EAAAA,GAAAA,MApBuB,0FA2BdE,EAAcX,EAAAA,QAAAA,EAAH,wJAKb,SAAAC,GAAK,gBAAOA,EAAMC,MAAMC,QAAQI,KAAKC,QAAhC,SAIHI,EAAkBZ,EAAAA,QAAAA,EAAH,qFAGjB,SAAAC,GAAK,gBAAOA,EAAMC,MAAMC,QAAQU,MAAMC,aAAjC,I,UCsChB,EA9EiB,WACf,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAuDC,EAAAA,EAAAA,MAA/CC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,eACpC,GAAkDC,EAAAA,EAAAA,MAA1CC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,YAAaC,EAA9B,EAA8BA,gBAC9B,GAA0BC,EAAAA,EAAAA,MAAnBC,GAAP,eACA,GAAoCC,EAAAA,EAAAA,MAA5BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aACXC,GAAkBC,EAAAA,EAAAA,MAAlBD,cACAE,GAAgBC,EAAAA,EAAAA,MAAhBD,YAEFE,GAAWC,EAAAA,EAAAA,MAsCjB,OApCAC,EAAAA,EAAAA,YAAU,WACRP,GACD,GAAE,CAACA,KAGJO,EAAAA,EAAAA,YAAU,WACR,GAAIrB,GAAaa,EAAUS,OAAS,EAAG,CACrC,IAAMC,EAAaV,EAAU,GAC7B,GAAIU,EAAY,CACdlB,EAAekB,EAAWC,IAE1B,IAAMC,EAAeC,mBAAmBH,EAAWI,OACnDR,EAAS,GAAD,OAAIM,GACb,CACDxB,GAAa,EACd,CACF,GAAE,CACDG,EACAD,EACAU,EACAb,EACAmB,EACAd,KAGFgB,EAAAA,EAAAA,YAAU,WAAM,wCACd,kFACMlB,EADN,gCAEUY,EAAcZ,GAFxB,uBAGUc,EAAYd,GAHtB,4CADc,uBAAC,WAAD,wBAQdyB,EACD,GAAE,CAACzB,EAAec,EAAaF,KAG9B,SAACc,EAAA,EAAD,WACE,UAAC9C,EAAD,CAAWO,GAAIqB,EAAf,UACGR,GACC,SAAC,KAAD,KAEA,SAACT,EAAD,CAAgBoC,cAAejB,EAA/B,SACwB,IAArBA,EAAUS,QACT,SAACS,EAAA,EAAD,CAAgBC,KAAK,YAErB,UAACrC,EAAD,WAAa,mDACsC,KACjD,SAACC,EAAD,CAAiBqC,QAASzB,EAA1B,SAAuC,mBAEpB,IAAI,2LAQ9BD,IACC,SAAC,KAAD,CAAOE,gBAAiBA,EAAxB,UACE,SAAC,KAAD,CAAYyB,QAAS1B,UAMhC,C","sources":["pages/styles/homePage.styled.js","pages/HomePage.jsx"],"sourcesContent":["import { media } from 'helpers';\n\nimport styled from '@emotion/styled';\n\nexport const BoardWrap = styled.div`\n  padding: 14px 20px 24px;\n  background-color: ${props => `${props.theme.palette.background.bord}`};\n  background-repeat: no-repeat;\n  background-image: url(${props => props.bg});\n  background-size: cover;\n  color: ${props => `${props.theme.palette.text.primary}B2`};\n  min-height: calc(100vh - 60px);\n\n  ${media.MEDIUM`\n  padding: 26px 32px;\n  min-height: calc(100vh - 68px);\n  `}\n\n  ${media.LARGE`\n  padding: 10px 24px 8px;\n  `}\n`;\n\nexport const DefaultWrapper = styled.div`\n  width: 100%;\n  height: calc(100vh - 98px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n\n  ${media.SMALL`\n  padding: 0 20px;\n  width: 375px;\n  `}\n\n  ${media.MEDIUM`\n  padding: 0;\n  width: 486px;\n  height: calc(100vh - 126px);\n  `}\n\n  ${media.LARGE`\n  padding: 0;\n  width: 486px;\n  height: calc(100vh - 86px);\n  `}\n`;\n\nexport const WelcomeText = styled.p`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 1.3;\n  letter-spacing: -0.24px;\n  color: ${props => `${props.theme.palette.text.primary}B2`};\n  text-align: center;\n`;\n\nexport const CreateBoardLink = styled.a`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${props => `${props.theme.palette.hover.inputAndIcon}`};\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport {\n  useBackground,\n  useBoardContext,\n  useBoards,\n  useCards,\n  useColumns,\n  useModal,\n} from 'hooks';\nimport SharedLayout from 'sharedLayout/SharedLayout';\n\nimport { BoardPopUp, Modal } from 'components';\nimport SkeletonLoader from 'components/skeleton/SkeletonLoader';\n\nimport {\n  BoardWrap,\n  CreateBoardLink,\n  DefaultWrapper,\n  WelcomeText,\n} from './styles/homePage.styled';\n\nconst HomePage = () => {\n  const [firstLoad, setFirstLoad] = useState(true);\n  const { activeBoardId, activeBoard, setActiveBoard } = useBoardContext();\n  const { isModal, toggleModal, onBackdropClick } = useModal();\n  const [backgroundImage] = useBackground();\n  const { allBoards, getAllBoards } = useBoards();\n  const { getAllColumns } = useColumns();\n  const { getAllCards } = useCards();\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getAllBoards();\n  }, [getAllBoards]);\n\n  // Отримання id активної дошки та розкодування id в назву і її додавання до адресного рядка\n  useEffect(() => {\n    if (firstLoad && allBoards.length > 0) {\n      const firstBoard = allBoards[0];\n      if (firstBoard) {\n        setActiveBoard(firstBoard.id);\n\n        const encodedTitle = encodeURIComponent(firstBoard.title);\n        navigate(`${encodedTitle}`);\n      }\n      setFirstLoad(false);\n    }\n  }, [\n    activeBoard,\n    activeBoardId,\n    allBoards,\n    firstLoad,\n    navigate,\n    setActiveBoard,\n  ]);\n\n  useEffect(() => {\n    async function fetchData() {\n      if (activeBoardId) {\n        await getAllColumns(activeBoardId);\n        await getAllCards(activeBoardId);\n      }\n    }\n\n    fetchData();\n  }, [activeBoardId, getAllCards, getAllColumns]);\n\n  return (\n    <SharedLayout>\n      <BoardWrap bg={backgroundImage}>\n        {activeBoardId ? (\n          <Outlet />\n        ) : (\n          <DefaultWrapper defaultBoard={!allBoards}>\n            {allBoards.length !== 0 ? (\n              <SkeletonLoader page=\"/board\" />\n            ) : (\n              <WelcomeText>\n                Before starting your project, it is essential to{' '}\n                <CreateBoardLink onClick={toggleModal}>\n                  create a board\n                </CreateBoardLink>{' '}\n                to visualize and track all the necessary tasks and milestones.\n                This board serves as a powerful tool to organize the workflow\n                and ensure effective collaboration among team members.\n              </WelcomeText>\n            )}\n          </DefaultWrapper>\n        )}\n        {isModal && (\n          <Modal onBackdropClick={onBackdropClick}>\n            <BoardPopUp onClose={toggleModal} />\n          </Modal>\n        )}\n      </BoardWrap>\n    </SharedLayout>\n  );\n};\nexport default HomePage;\n"],"names":["BoardWrap","styled","props","theme","palette","background","bord","bg","text","primary","media","DefaultWrapper","WelcomeText","CreateBoardLink","hover","inputAndIcon","useState","firstLoad","setFirstLoad","useBoardContext","activeBoardId","activeBoard","setActiveBoard","useModal","isModal","toggleModal","onBackdropClick","useBackground","backgroundImage","useBoards","allBoards","getAllBoards","getAllColumns","useColumns","getAllCards","useCards","navigate","useNavigate","useEffect","length","firstBoard","id","encodedTitle","encodeURIComponent","title","fetchData","SharedLayout","defaultBoard","SkeletonLoader","page","onClick","onClose"],"sourceRoot":""}