{"version":3,"file":"static/js/509.e618ea9d.chunk.js","mappings":"8RAUaA,EAAkBC,EAAAA,QAAAA,QAAH,qNACN,mBCXf,SAAsBC,GAC3B,IAAIC,EAAQ,UAEZ,OAAQD,GACN,IAAK,OACHC,EAAQ,UACR,MACF,IAAK,QACHA,EAAQ,UACR,MACF,IAAK,SACHA,EAAQ,UACR,MACF,IAAK,OACHA,EAAQ,OAKZ,OAAOA,CACR,CDTsCC,CAAjB,EAAGF,QAAH,IACI,mBEZnB,SAAoBG,GACzB,IAAIC,EAAM,GAINA,EADG,SADCD,EAEE,mBAGA,OAIV,OAAOC,CACR,CFDwCC,CAAf,EAAGF,MAAH,IACf,mBGbJ,SAAuBG,GAC5B,IAAIL,EAAQ,GAEZ,OAAQK,GACN,IAAK,OAML,IAAK,SACHL,EAAQ,UACR,MALF,IAAK,QACHA,EAAQ,UAQZ,OAAOA,CACR,CHJ4BM,CAAlB,EAAGD,SAAH,IASEE,EAAYT,EAAAA,QAAAA,IAAH,mOAaTU,EAASV,EAAAA,QAAAA,IAAH,gNAaNW,EAAOX,EAAAA,QAAAA,IAAH,4OAcJY,EAAMZ,EAAAA,QAAAA,EAAH,yLAYHa,EAAcb,EAAAA,QAAAA,GAAH,gNAaXc,EAAQd,EAAAA,QAAAA,EAAH,yRAgBLe,EAAOf,EAAAA,QAAAA,EAAH,iHAQJgB,EAAOhB,EAAAA,QAAAA,GAAH,2KAGK,mBIlHf,SAAyBiB,GAC9B,IAAIf,EAAQ,OAEZ,OAAQe,GACN,IAAK,OAGL,IAAK,QACHf,EAAQ,UACR,MACF,IAAK,SACHA,EAAQ,UACR,MACF,IAAK,OACHA,EAAQ,UAIZ,OAAOA,CACR,CJ+FyCgB,CAApB,EAAGD,WAAH,IAEX,mBKpHJ,SAA0BE,GAC/B,IAAIjB,EAAQ,GAEZ,OAAQiB,GACN,IAAK,OAGL,IAAK,QACHjB,EAAQ,UACR,MACF,IAAK,SAGL,IAAK,OACHA,EAAQ,UAKZ,OAAOA,CACR,CLgG4BkB,CAAlB,EAAGD,SAAH,I,GAMenB,EAAAA,QAAAA,KAAH,wI,SM/CvB,EAzDkB,WAChB,IAAQqB,GAAeC,EAAAA,EAAAA,MAAfD,WACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,aAEzBC,EAAAA,EAAAA,YAAU,WACHH,EAAKI,KAKVL,EAAaC,EAAKK,OAJhBN,EAAa,OAKhB,GAAE,CAACC,EAAKI,KAAMJ,EAAKK,QAEpB,IAAMC,EAAS,CACbC,MAAOZ,EAAa,0CAA4C,KAChEa,KAAMb,EAAU,yCAGZ,kDACJc,KAAMd,EACF,2DACA,gHACJe,IAAKf,EAAa,QAAU,WAC5BgB,KAAMhB,EACF,0CACA,kCACJiB,cAAejB,EACX,uGACA,uEAGN,OACE,SAACtB,EAAD,CAAiBQ,SAAUiB,EAAWvB,QAASuB,EAAWpB,MAAOoB,EAAjE,UACE,UAACf,EAAD,YACE,UAACC,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,UAAK,QAAS,YAGhB,UAACC,EAAD,YACE,SAACC,EAAD,UAAQkB,EAAOC,QACdD,EAAOE,YAGZ,SAACnB,EAAD,UAAOiB,EAAOG,QACd,SAAC,KAAD,CAASI,GAAIP,EAAOI,IAApB,UACE,SAACpB,EAAD,CAAMG,SAAUK,EAAWP,WAAYO,EAAvC,SACGQ,EAAOK,UAGZ,SAACtB,EAAD,UAAOiB,EAAOM,oBAIrB,C","sources":["pages/styles/errorPage.styled.js","helpers/errorPageThemes/backgroundColor.js","helpers/errorPageThemes/backgroundImage.js","helpers/errorPageThemes/textColor.js","helpers/errorPageThemes/buttonBackgroundColor.js","helpers/errorPageThemes/buttonTextColor.js","pages/ErrorPage.jsx"],"sourcesContent":["import {\n  checkBgColor,\n  checkBgImg,\n  checkBtnBgColor,\n  checkBtnTxtColor,\n  checkTxtColor,\n} from 'helpers/errorPageThemes';\n\nimport styled from '@emotion/styled';\n\nexport const ErrorBackground = styled.section`\n  background-color: ${({ bgColor }) => checkBgColor(bgColor)};\n  background-image: var(${({ bgImg }) => checkBgImg(bgImg)});\n  color: ${({ txtColor }) => checkTxtColor(txtColor)};\n\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n`;\n\nexport const Container = styled.div`\n  padding: 0 20px;\n  min-width: 200px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    width: 500px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1000px;\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  align-items: center;\n\n  margin-bottom: 48px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const Code = styled.div`\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 40px;\n\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 1440px) {\n    font-size: 50px;\n  }\n`;\n\nexport const Num = styled.p`\n  display: block;\n\n  font-size: 60px;\n  line-height: 60px;\n\n  @media screen and (min-width: 1440px) {\n    font-size: 100px;\n    line-height: 100px;\n  }\n`;\n\nexport const Description = styled.h2`\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 40px;\n\n  text-align: center;\n\n  @media screen and (min-width: 1439px) {\n    font-size: 40px;\n    line-height: 40px;\n  }\n`;\n\nexport const Start = styled.p`\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 30px;\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: 14px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-weight: 600;\n    font-size: 20px;\n    line-height: 40px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n\n  margin-bottom: 14px;\n`;\n\nexport const Link = styled.li`\n  padding: 14px 0;\n  width: 100%;\n  background-color: ${({ btnBgColor }) => checkBtnBgColor(btnBgColor)};\n  border-radius: 8px;\n  color: ${({ btnColor }) => checkBtnTxtColor(btnColor)};\n  margin-bottom: 14px;\n\n  list-style: none;\n`;\n\nexport const InviteText = styled.span`\n  display: inline-block;\n  margin-top: 14px;\n\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 18px;\n`;\n","export function checkBgColor(bgColor) {\n  let color = '#161616';\n\n  switch (bgColor) {\n    case 'Dark':\n      color = '#1F1F1F';\n      break;\n    case 'Light':\n      color = '#FDFDFD';\n      break;\n    case 'Violet':\n      color = '#D6D8FF';\n      break;\n    case 'Void':\n      color = 'none';\n      break;\n    default:\n      break;\n  }\n  return color;\n}\n","export function checkBgImg(bgImg) {\n  let img = '';\n\n  switch (bgImg) {\n    case 'Void':\n      img = '--welcomeBgColor';\n      break;\n    default:\n      img = 'none';\n      break;\n  }\n\n  return img;\n}\n","export function checkTxtColor(txtColor) {\n  let color = '';\n\n  switch (txtColor) {\n    case 'Dark':\n      color = '#FFFFFF';\n      break;\n    case 'Light':\n      color = '#000000';\n      break;\n    case 'Violet':\n      color = '#FFFFFF';\n      break;\n    default:\n      break;\n  }\n  return color;\n}\n","export function checkBtnBgColor(btnBgColor) {\n  let color = 'Void';\n\n  switch (btnBgColor) {\n    case 'Dark':\n      color = '#BEDBB0';\n      break;\n    case 'Light':\n      color = '#BEDBB0';\n      break;\n    case 'Violet':\n      color = '#9747FF';\n      break;\n    case 'Void':\n      color = '#161616';\n      break;\n    default:\n  }\n  return color;\n}\n","export function checkBtnTxtColor(btnColor) {\n  let color = '';\n\n  switch (btnColor) {\n    case 'Dark':\n      color = '#161616';\n      break;\n    case 'Light':\n      color = '#161616';\n      break;\n    case 'Violet':\n      color = '#FFFFFF';\n      break;\n    case 'Void':\n      color = '#FFFFFF';\n      break;\n    default:\n      break;\n  }\n  return color;\n}\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { useAuth } from 'hooks';\nimport { authSelectors } from 'redux/auth';\n\nimport {\n  Code,\n  Container,\n  Description,\n  ErrorBackground,\n  Header,\n  Link,\n  Num,\n  Start,\n  Text,\n} from './styles/errorPage.styled';\n\nconst ErrorPage = () => {\n  const { isLoggedIn } = useAuth();\n  const [userTheme, setUserTheme] = useState('');\n  const user = useSelector(authSelectors.selectUser);\n\n  useEffect(() => {\n    if (!user.name) {\n      setUserTheme('Void');\n      return;\n    }\n\n    setUserTheme(user.theme);\n  }, [user.name, user.theme]);\n\n  const errDis = {\n    start: isLoggedIn ? 'Well...yeah. Not gonna happened, sorry.' : null,\n    desc: isLoggedIn\n      ? `Seems such\n    \"page\" doesn't exist.`\n      : 'Oh. Hello there! Looks like you are lost a bit.',\n    text: isLoggedIn\n      ? \"Don't worry, we'll highlight the trail to a safer place.\"\n      : 'If you are looking for us you were very close. Here, follow the link and let us know if you needed something.',\n    nav: isLoggedIn ? '/home' : '/welcome',\n    link: isLoggedIn\n      ? \"This link to Home, yeah. You've get it.\"\n      : 'Start achieving your goals now!',\n    underLinkText: isLoggedIn\n      ? '(...You should check the exact address there you want to go. Or, try to tap a bit slower next time.)'\n      : '(...In the case you happened here randomly...well, welcome anyway.)',\n  };\n\n  return (\n    <ErrorBackground txtColor={userTheme} bgColor={userTheme} bgImg={userTheme}>\n      <Container>\n        <Header>\n          <Code>\n            <Num>404</Num>\n            error\n          </Code>\n          <Description>\n            <Start>{errDis.start}</Start>\n            {errDis.desc}\n          </Description>\n        </Header>\n        <Text>{errDis.text}</Text>\n        <NavLink to={errDis.nav}>\n          <Link btnColor={userTheme} btnBgColor={userTheme}>\n            {errDis.link}\n          </Link>\n        </NavLink>\n        <Text>{errDis.underLinkText}</Text>\n      </Container>\n    </ErrorBackground>\n  );\n};\n\nexport default ErrorPage;\n"],"names":["ErrorBackground","styled","bgColor","color","checkBgColor","bgImg","img","checkBgImg","txtColor","checkTxtColor","Container","Header","Code","Num","Description","Start","Text","Link","btnBgColor","checkBtnBgColor","btnColor","checkBtnTxtColor","isLoggedIn","useAuth","useState","userTheme","setUserTheme","user","useSelector","authSelectors","useEffect","name","theme","errDis","start","desc","text","nav","link","underLinkText","to"],"sourceRoot":""}